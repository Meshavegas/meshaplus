#!/bin/bash

# Script de diagnostic SSH pour MeshaPlus
# Usage: ./ssh-diagnostic.sh [host] [username] [ssh_key_path]

set -e

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Param√®tres
HOST=${1:-"your-vps-host"}
USERNAME=${2:-"your-username"}
SSH_KEY_PATH=${3:-"~/.ssh/vps_key"}

log_info "üîç Diagnostic SSH pour MeshaPlus"
log_info "Host: $HOST"
log_info "Username: $USERNAME"
log_info "SSH Key: $SSH_KEY_PATH"
echo

# 1. V√©rifier que la cl√© SSH existe
log_info "1. V√©rification de la cl√© SSH..."
if [ -f "$SSH_KEY_PATH" ]; then
    log_success "Cl√© SSH trouv√©e: $SSH_KEY_PATH"
    log_info "Permissions: $(ls -la "$SSH_KEY_PATH")"
    log_info "Taille: $(wc -c < "$SSH_KEY_PATH") bytes"
    
    # V√©rifier le format de la cl√©
    if grep -q "BEGIN.*PRIVATE KEY" "$SSH_KEY_PATH"; then
        log_success "Format de cl√© priv√©e d√©tect√©"
    else
        log_warning "Format de cl√© non reconnu"
    fi
else
    log_error "Cl√© SSH introuvable: $SSH_KEY_PATH"
    exit 1
fi
echo

# 2. V√©rifier les permissions de la cl√©
log_info "2. V√©rification des permissions..."
PERMISSIONS=$(stat -c "%a" "$SSH_KEY_PATH")
if [ "$PERMISSIONS" = "600" ]; then
    log_success "Permissions correctes: $PERMISSIONS"
else
    log_warning "Permissions incorrectes: $PERMISSIONS (devrait √™tre 600)"
    log_info "Correction des permissions..."
    chmod 600 "$SSH_KEY_PATH"
    log_success "Permissions corrig√©es"
fi
echo

# 3. Test de connectivit√© r√©seau
log_info "3. Test de connectivit√© r√©seau..."
if ping -c 1 "$HOST" > /dev/null 2>&1; then
    log_success "Host accessible via ping"
else
    log_warning "Host non accessible via ping (peut √™tre normal si ICMP est bloqu√©)"
fi

# Test de connectivit√© sur le port SSH
if nc -z "$HOST" 22 2>/dev/null; then
    log_success "Port SSH (22) accessible"
else
    log_error "Port SSH (22) non accessible"
    exit 1
fi
echo

# 4. Test de connexion SSH basique
log_info "4. Test de connexion SSH..."
if ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" "$USERNAME@$HOST" "echo 'Connexion SSH r√©ussie'" 2>/dev/null; then
    log_success "Connexion SSH r√©ussie!"
else
    log_error "√âchec de la connexion SSH"
    echo
    log_info "üîç Tentative de diagnostic d√©taill√©..."
    
    # Test avec verbose
    log_info "Test avec mode verbose:"
    ssh -v -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" "$USERNAME@$HOST" "echo 'test'" 2>&1 | head -20
    
    echo
    log_info "üîß Solutions possibles:"
    log_info "1. V√©rifiez que la cl√© publique est ajout√©e √† ~/.ssh/authorized_keys sur le VPS"
    log_info "2. V√©rifiez que l'utilisateur $USERNAME existe sur le VPS"
    log_info "3. V√©rifiez que SSH est configur√© pour accepter les cl√©s publiques"
    log_info "4. V√©rifiez les logs SSH sur le VPS: sudo journalctl -u ssh"
    exit 1
fi
echo

# 5. Test de commandes sur le VPS
log_info "5. Test des commandes sur le VPS..."
log_info "V√©rification de l'utilisateur:"
ssh -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" "$USERNAME@$HOST" "whoami && pwd && id"

log_info "V√©rification de Docker:"
if ssh -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" "$USERNAME@$HOST" "docker --version" 2>/dev/null; then
    log_success "Docker install√©"
else
    log_warning "Docker non install√© ou non accessible"
fi

log_info "V√©rification de l'espace disque:"
ssh -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" "$USERNAME@$HOST" "df -h /"

echo
log_success "üéâ Diagnostic SSH termin√© avec succ√®s!"
log_info "Le VPS est pr√™t pour le d√©ploiement MeshaPlus" 