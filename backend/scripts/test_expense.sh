#!/bin/bash

# Script de test pour les routes Expense
# Usage: ./scripts/test_expense.sh

set -e

echo "üß™ Test des routes Expense"
echo "=========================="

# Configuration
BASE_URL="http://localhost:8080"
EMAIL="expense-test@example.com"
PASSWORD="password123"

echo "üìù 1. Cr√©ation d'un utilisateur de test..."
REGISTER_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/auth/register" \
  -H "Content-Type: application/json" \
  -d "{\"name\":\"Test User\",\"email\":\"$EMAIL\",\"password\":\"$PASSWORD\"}")

if echo "$REGISTER_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ Utilisateur cr√©√© avec succ√®s"
else
    echo "‚ùå Erreur cr√©ation utilisateur: $REGISTER_RESPONSE"
    exit 1
fi

# Extraction du token
TOKEN=$(echo "$REGISTER_RESPONSE" | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)
echo "üîë Token extrait: ${TOKEN:0:20}..."

echo ""
echo "üìù 2. Test cr√©ation de d√©penses..."

# Cr√©ation de plusieurs d√©penses
EXPENSE1_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/expenses" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"amount":50.00,"description":"Achat alimentaire","date":"2025-07-26T00:00:00Z"}')

if echo "$EXPENSE1_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense 1 cr√©√©e avec succ√®s"
    EXPENSE1_ID=$(echo "$EXPENSE1_RESPONSE" | grep -o '"id":"[^"]*"' | cut -d'"' -f4)
else
    echo "‚ùå Erreur cr√©ation d√©pense 1: $EXPENSE1_RESPONSE"
    exit 1
fi

EXPENSE2_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/expenses" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"amount":25.50,"description":"Transport","date":"2025-07-26T00:00:00Z"}')

if echo "$EXPENSE2_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense 2 cr√©√©e avec succ√®s"
    EXPENSE2_ID=$(echo "$EXPENSE2_RESPONSE" | grep -o '"id":"[^"]*"' | cut -d'"' -f4)
else
    echo "‚ùå Erreur cr√©ation d√©pense 2: $EXPENSE2_RESPONSE"
    exit 1
fi

EXPENSE3_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/expenses" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"amount":100.00,"description":"Loisirs","date":"2025-07-25T00:00:00Z"}')

if echo "$EXPENSE3_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense 3 cr√©√©e avec succ√®s"
    EXPENSE3_ID=$(echo "$EXPENSE3_RESPONSE" | grep -o '"id":"[^"]*"' | cut -d'"' -f4)
else
    echo "‚ùå Erreur cr√©ation d√©pense 3: $EXPENSE3_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 3. Test r√©cup√©ration de toutes les d√©penses..."
LIST_RESPONSE=$(curl -s -X GET "$BASE_URL/api/v1/expenses" \
  -H "Authorization: Bearer $TOKEN")

if echo "$LIST_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ Liste des d√©penses r√©cup√©r√©e avec succ√®s"
    EXPENSE_COUNT=$(echo "$LIST_RESPONSE" | grep -o '"id":"[^"]*"' | wc -l)
    echo "üìä Nombre de d√©penses: $EXPENSE_COUNT"
else
    echo "‚ùå Erreur r√©cup√©ration liste: $LIST_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 4. Test r√©cup√©ration d'une d√©pense par ID..."
GET_RESPONSE=$(curl -s -X GET "$BASE_URL/api/v1/expenses/$EXPENSE1_ID" \
  -H "Authorization: Bearer $TOKEN")

if echo "$GET_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense r√©cup√©r√©e par ID avec succ√®s"
    EXPENSE_AMOUNT=$(echo "$GET_RESPONSE" | grep -o '"amount":[0-9.]*' | cut -d':' -f2)
    echo "üí∞ Montant: $EXPENSE_AMOUNT"
else
    echo "‚ùå Erreur r√©cup√©ration par ID: $GET_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 5. Test calcul du total des d√©penses..."
TOTAL_RESPONSE=$(curl -s -X GET "$BASE_URL/api/v1/expenses/total" \
  -H "Authorization: Bearer $TOKEN")

if echo "$TOTAL_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ Total calcul√© avec succ√®s"
    TOTAL_AMOUNT=$(echo "$TOTAL_RESPONSE" | grep -o '"data":[0-9.]*' | cut -d':' -f2)
    echo "üí∞ Total des d√©penses: $TOTAL_AMOUNT"
else
    echo "‚ùå Erreur calcul total: $TOTAL_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 6. Test r√©cup√©ration par p√©riode..."
DATE_RANGE_RESPONSE=$(curl -s -X GET "$BASE_URL/api/v1/expenses/date-range?start_date=2025-07-25&end_date=2025-07-26" \
  -H "Authorization: Bearer $TOKEN")

if echo "$DATE_RANGE_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©penses par p√©riode r√©cup√©r√©es avec succ√®s"
    RANGE_COUNT=$(echo "$DATE_RANGE_RESPONSE" | grep -o '"id":"[^"]*"' | wc -l)
    echo "üìä Nombre de d√©penses sur la p√©riode: $RANGE_COUNT"
else
    echo "‚ùå Erreur r√©cup√©ration par p√©riode: $DATE_RANGE_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 7. Test mise √† jour d'une d√©pense..."
UPDATE_RESPONSE=$(curl -s -X PUT "$BASE_URL/api/v1/expenses/$EXPENSE1_ID" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"amount":60.00,"description":"Achat alimentaire mis √† jour"}')

if echo "$UPDATE_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense mise √† jour avec succ√®s"
    NEW_AMOUNT=$(echo "$UPDATE_RESPONSE" | grep -o '"amount":[0-9.]*' | cut -d':' -f2)
    echo "üí∞ Nouveau montant: $NEW_AMOUNT"
else
    echo "‚ùå Erreur mise √† jour: $UPDATE_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 8. Test suppression des d√©penses..."

# Suppression de la premi√®re d√©pense
DELETE1_RESPONSE=$(curl -s -X DELETE "$BASE_URL/api/v1/expenses/$EXPENSE1_ID" \
  -H "Authorization: Bearer $TOKEN")

if echo "$DELETE1_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense 1 supprim√©e avec succ√®s"
else
    echo "‚ùå Erreur suppression d√©pense 1: $DELETE1_RESPONSE"
    exit 1
fi

# Suppression de la deuxi√®me d√©pense
DELETE2_RESPONSE=$(curl -s -X DELETE "$BASE_URL/api/v1/expenses/$EXPENSE2_ID" \
  -H "Authorization: Bearer $TOKEN")

if echo "$DELETE2_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense 2 supprim√©e avec succ√®s"
else
    echo "‚ùå Erreur suppression d√©pense 2: $DELETE2_RESPONSE"
    exit 1
fi

# Suppression de la troisi√®me d√©pense
DELETE3_RESPONSE=$(curl -s -X DELETE "$BASE_URL/api/v1/expenses/$EXPENSE3_ID" \
  -H "Authorization: Bearer $TOKEN")

if echo "$DELETE3_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ D√©pense 3 supprim√©e avec succ√®s"
else
    echo "‚ùå Erreur suppression d√©pense 3: $DELETE3_RESPONSE"
    exit 1
fi

echo ""
echo "üìù 9. V√©rification que toutes les d√©penses sont supprim√©es..."
FINAL_LIST_RESPONSE=$(curl -s -X GET "$BASE_URL/api/v1/expenses" \
  -H "Authorization: Bearer $TOKEN")

if echo "$FINAL_LIST_RESPONSE" | grep -q '"data":null'; then
    echo "‚úÖ Toutes les d√©penses ont √©t√© supprim√©es"
else
    echo "‚ùå Erreur: il reste des d√©penses apr√®s suppression"
    exit 1
fi

echo ""
echo "üéâ Tous les tests des routes Expense sont pass√©s avec succ√®s !"
echo "==============================================================" 